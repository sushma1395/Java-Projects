/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserIterface.AirlinesManageFlightSchedule;

import Buisness.Airliner;
import Buisness.AirlinerDirectory;
import Buisness.FlightSchedule;
import Buisness.FlightScheduleDirectory;
import UserInterface.ManageAirliners.ViewNewAirlinerJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author gadep
 */
public class ViewFlightScheduleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewFlightScheduleJPanel
     */
      private JPanel userProcesContainer ;
     private Airliner travelagency;
     private AirlinerDirectory airDir;
    // private FlightSchedule flightschedule;
     private FlightScheduleDirectory flightdir;
    public ViewFlightScheduleJPanel(JPanel userProcesContainer , Airliner travelagency, AirlinerDirectory airDir ) {
        initComponents();
        
         this.userProcesContainer = userProcesContainer;
        this.airDir = airDir;
       this.travelagency = travelagency;
       this.flightdir=travelagency.getFlightScheduleDirectory();
       // this.flightschedule = flightschedule;
     //   this.flightdir =  new FlightScheduleDirectory();
        
       
    
    for(FlightSchedule flightschedule : travelagency.getFlightScheduleDirectory().getAirlinerDirectory() ){
        
        
        
        txtAirlineName.setText(travelagency.getAirlineName());
        txtAirlineType.setText(travelagency.getAirlineType());
         txtSeatCapacity.setText(String.valueOf(travelagency.getSeatCapacity()));
        txtAirlineType.setEnabled(false);
        txtSeatCapacity.setEnabled(false);
        txtAirlineName.setEditable(false);
         txtFrom.setEditable(false);
        
        txtFrom.setSelectedItem(flightschedule.getFrom());
        txtTo.setSelectedItem(flightschedule.getTo());
            String[] depdateofjourney = flightschedule.getDateofJourney().split("/");
            String depmonth1 = depdateofjourney[0];
            String depdate1 = depdateofjourney[1];
               
          
            
                txtTime.setSelectedItem(depmonth1);
                daystxt.setSelectedItem(depdate1);
                
               String[] departuretime = flightschedule.getDepartureTime().split("/"); 
               String hours1 = departuretime[0];
               String min1 = departuretime[1];
               hourscombo1.setSelectedItem(hours1);
               minutecombo1.setSelectedItem(min1);
               
               
               String[] arrivaltime = flightschedule.getDepartureTime().split("/"); 
               String hourss1 = arrivaltime[0];
               String mins1 = arrivaltime[1];
               hourscombo.setSelectedItem(hourss1);
               minutecombo.setSelectedItem(mins1);
           
        
    }
     
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSeatCapacity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtAirlineType = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTime = new javax.swing.JComboBox();
        daystxt = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        hourscombo = new javax.swing.JComboBox();
        minutecombo = new javax.swing.JComboBox();
        hourscombo1 = new javax.swing.JComboBox();
        minutecombo1 = new javax.swing.JComboBox();
        txtFrom = new javax.swing.JComboBox();
        txtTo = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        txtAirlineName = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        savebtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("View Flight Schedule");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 42, 255, 46));

        txtSeatCapacity.setEnabled(false);
        add(txtSeatCapacity, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 157, 140, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 19)); // NOI18N
        jLabel3.setText("Airline type");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 19)); // NOI18N
        jLabel4.setText("Flight Number");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 163, -1, -1));

        txtAirlineType.setEditable(false);
        add(txtAirlineType, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, 140, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 19)); // NOI18N
        jLabel2.setText("From");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 218, 94, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 19)); // NOI18N
        jLabel5.setText("To");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 268, 94, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 19)); // NOI18N
        jLabel6.setText("Date of Journey");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 320, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 19)); // NOI18N
        jLabel7.setText("Arrival Time");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 410, 110, -1));

        txtTime.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        txtTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeActionPerformed(evt);
            }
        });
        add(txtTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 320, 80, -1));

        daystxt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        add(daystxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 320, 100, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 19)); // NOI18N
        jLabel8.setText("Departure Time");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 370, 140, -1));

        hourscombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hours", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        add(hourscombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 400, -1, -1));

        minutecombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Minutes", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        minutecombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minutecomboActionPerformed(evt);
            }
        });
        add(minutecombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 400, -1, -1));

        hourscombo1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hours", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        add(hourscombo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, -1, -1));

        minutecombo1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Minutes", "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        minutecombo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minutecombo1ActionPerformed(evt);
            }
        });
        add(minutecombo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 360, -1, -1));

        txtFrom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "New Jersey", "California", "Boston", "New Jersey" }));
        txtFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFromActionPerformed(evt);
            }
        });
        add(txtFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 220, -1, -1));

        txtTo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "None", "Georgia", "New York", "Ohio", "Washington", "New Jersey" }));
        add(txtTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 260, -1, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 19)); // NOI18N
        jLabel9.setText("Airliner name");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, -1));

        txtAirlineName.setEnabled(false);
        txtAirlineName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAirlineNameActionPerformed(evt);
            }
        });
        add(txtAirlineName, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 140, -1));

        updateBtn.setFont(new java.awt.Font("Times New Roman", 1, 21)); // NOI18N
        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(573, 488, -1, -1));

        savebtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        savebtn.setText("Save");
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });
        add(savebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 488, -1, -1));

        backBtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 661, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimeActionPerformed

    private void minutecomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minutecomboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minutecomboActionPerformed

    private void minutecombo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minutecombo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minutecombo1ActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
        
     
        txtAirlineName.setEditable(true);
        txtAirlineType.setEditable(true);
        txtSeatCapacity.setEditable(true);
        txtFrom.setEditable(true);
        txtTo.setEditable(true);
        txtTime.setEditable(true);
        daystxt.setEditable(true);
        hourscombo1.setEditable(true);
        minutecombo1.setEditable(true);
        hourscombo.setEditable(true);
        minutecombo.setEditable(true);

        savebtn.setEnabled(true);
        updateBtn.setEnabled(false);
    }//GEN-LAST:event_updateBtnActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
        // TODO add your handling code here:
        
            txtAirlineName.setEditable(false);
            txtAirlineType.setEditable(false);
            txtSeatCapacity.setEditable(false);
            
            txtAirlineName.getText();
            txtAirlineType.getText();
            txtSeatCapacity.getText();

            savebtn.setEnabled(false);
            updateBtn.setEnabled(true);
             if(txtFrom.getSelectedItem() == txtTo.getSelectedItem())
           {
               JOptionPane.showMessageDialog(null, "Destination and Source can't be the same,Sorry ! Please re-enter");
               return;
           }
             
              if(txtTime.getSelectedItem() == "Month" || daystxt.getSelectedItem() == "Day")
           {
             JOptionPane.showMessageDialog(null, "Please enter Date of Journey details");
               return;  
           }
          if(hourscombo1.getSelectedItem() == "Hours" || minutecombo1.getSelectedItem() == "Minutes")
           {
             JOptionPane.showMessageDialog(null, "Please enter Departure time details");
               return;  
           }
            
          if(hourscombo.getSelectedItem() == "Hours" || minutecombo.getSelectedItem() == "Minutes")
           {
             JOptionPane.showMessageDialog(null, "Please enter Arrival time details");
               return;  
           }
          if(hourscombo1.getSelectedItem() == "00" || minutecombo1.getSelectedItem() == "00")
           {
             JOptionPane.showMessageDialog(null, "Please enter  correct Departure time details");
               return;  
           }
            
          if(hourscombo.getSelectedItem() == "00" || minutecombo.getSelectedItem() == "00")
           {
             JOptionPane.showMessageDialog(null, "Please enter Arrival time details");
               return;  
           }
             
              if(String.valueOf(txtTime.getItemAt(txtTime.getSelectedIndex())).equals("February") && Integer.parseInt(String.valueOf(daystxt.getItemAt(daystxt.getSelectedIndex()))) > 28 )
           {
               JOptionPane.showMessageDialog(null, "February does not have the day u entered,Please re-enter");
               return;
           }
           
            if(String.valueOf(txtTime.getItemAt(txtTime.getSelectedIndex())).equals("April") && Integer.parseInt(String.valueOf(daystxt.getItemAt(daystxt.getSelectedIndex()))) > 30 )
           {
               JOptionPane.showMessageDialog(null, "April does not have the day u entered,Please re-enter");
               return;
           }
            
            if(String.valueOf(txtTime.getItemAt(txtTime.getSelectedIndex())).equals("June") && Integer.parseInt(String.valueOf(daystxt.getItemAt(daystxt.getSelectedIndex()))) > 30 )
           {
               JOptionPane.showMessageDialog(null, "June does not have the day u entered,Please re-enter");
               return;
           }
            
            if(String.valueOf(txtTime.getItemAt(txtTime.getSelectedIndex())).equals("June") && Integer.parseInt(String.valueOf(daystxt.getItemAt(daystxt.getSelectedIndex()))) > 30 )
           {
               JOptionPane.showMessageDialog(null, "June does not have the day u entered,Please re-enter");
               return;
           }
            
            if(String.valueOf(txtTime.getItemAt(txtTime.getSelectedIndex())).equals("September") && Integer.parseInt(String.valueOf(daystxt.getItemAt(daystxt.getSelectedIndex()))) > 30 )
           {
               JOptionPane.showMessageDialog(null, "June does not have the day u entered,Please re-enter");
               return;
           }
            
           if(String.valueOf(txtTime.getItemAt(txtTime.getSelectedIndex())).equals("November") && Integer.parseInt(String.valueOf(daystxt.getItemAt(daystxt.getSelectedIndex()))) > 30 )
           {
               JOptionPane.showMessageDialog(null, "June does not have the day u entered,Please re-enter");
               return;
           } 
        
            
             FlightSchedule flightschedule = this.flightdir.getSDListS().get(0);
             String From = (String) txtFrom.getSelectedItem();
             String To = (String) txtTo.getSelectedItem();
    
       String depdateofjourney = txtTime.getSelectedItem()+"/"+daystxt.getSelectedItem();
       String departuretime = hourscombo1.getSelectedItem()+"/"+minutecombo1.getSelectedItem();
       String arrivaltime = hourscombo.getSelectedItem()+"/"+minutecombo.getSelectedItem();
     //  String arrTime = arrhour.getSelectedItem()+"/"+arrmin.getSelectedItem()+"/"+arrsec.getSelectedItem();
     //  String price = (pricetxtfield.getText());
       flightschedule.setFrom((String) txtFrom.getSelectedItem());
       flightschedule.setTo((String)txtTo.getSelectedItem());
      // flightschedule.setDateofJourney(depdateofjourney);
       flightschedule.setDateofJourney(depdateofjourney);
       flightschedule.setDepartureTime(departuretime);
       flightschedule.setArrivalTime(arrivaltime);
       
            JOptionPane.showMessageDialog(null, "Flight Schedule updated successfully");
        

    }//GEN-LAST:event_savebtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        Component[] components = userProcesContainer.getComponents();
        for(Component c : components){
            if(c instanceof ViewFlightSchedule){
                ViewFlightSchedule panel = (ViewFlightSchedule) c;
               panel.populateTable();
            }
        }
        userProcesContainer.remove(this);
        CardLayout layout = (CardLayout)userProcesContainer.getLayout();
        layout.previous(userProcesContainer);

        
    }//GEN-LAST:event_backBtnActionPerformed

    private void txtFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFromActionPerformed

    private void txtAirlineNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAirlineNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAirlineNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox daystxt;
    private javax.swing.JComboBox hourscombo;
    private javax.swing.JComboBox hourscombo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox minutecombo;
    private javax.swing.JComboBox minutecombo1;
    private javax.swing.JButton savebtn;
    private javax.swing.JTextField txtAirlineName;
    private javax.swing.JTextField txtAirlineType;
    private javax.swing.JComboBox txtFrom;
    private javax.swing.JTextField txtSeatCapacity;
    private javax.swing.JComboBox txtTime;
    private javax.swing.JComboBox txtTo;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
